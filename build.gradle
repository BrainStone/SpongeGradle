plugins {
    id 'java-gradle-plugin'
    id 'groovy'

    id 'eclipse'
    id 'idea'

    id 'maven'
    id 'com.gradle.plugin-publish' version '0.9.3'

    id 'net.minecrell.licenser' version '0.1.3'
}

defaultTasks 'clean', 'licenseFormat', 'build'

apply plugin: 'java'

group = 'org.spongepowered'
version = '0.5.1-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = project.name.toLowerCase()

repositories {
    jcenter()
}

configurations {
    compileOnly
}

sourceSets.main.compileClasspath += configurations.compileOnly
eclipse.classpath.plusConfigurations += [configurations.compileOnly]
idea.module.scopes.COMPILE.plus += [configurations.compileOnly]

dependencies {
    compile 'org.spongepowered:plugin-meta:0.1.1'
    compileOnly 'org.codehaus.groovy:groovy-all:2.4.4:indy'
}

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}

processResources {
   from 'LICENSE.txt'
}

license {
    header = file('HEADER.txt')
    newLine = false
    ext {
        name = project.name
        organization = project.organization
        url = project.url
    }

    include '**/*.java'
    include '**/*.groovy'
}

jar.manifest.attributes(
        'Created-By': "${System.properties['java.version']} (${System.properties['java.vm.vendor']})",

        'Implementation-Title': project.name,
        'Implementation-Version': project.version,
        'Implementation-Vendor': project.organization
)

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourceJar
    archives groovydocJar
}

pluginBundle {
    website = "https://github.com/$project.organization/$project.name"
    vcsUrl = website
    description = project.description
    tags = ['minecraft', 'sponge']

    plugins {
        spongePluginPlugin {
            id = 'org.spongepowered.plugin'
            displayName = 'Sponge Plugin Gradle integration'
            description = 'Gradle plugin providing integration for plugins made for the Sponge platform'
        }
    }
}

// Support uploading with FTP
configurations {
    deployerJars // Deployment dependency
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.10'
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars

            // This is set by the build server when deploying to the repo
            if (project.hasProperty('spongeRepo')) {
                repository(url: project.spongeRepo) {
                    if (project.hasProperty('spongeUsername') && project.hasProperty('spongePassword')) {
                        authentication(userName: project.spongeUsername, password: project.spongePassword)
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}
